set(ORIG_CXX_STD ${CMAKE_CXX_STANDARD})
set(ORIG_BUILD_TYPE ${CMAKE_BUILD_TYPE})
set(ORIG_CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})
unset(CMAKE_CXX_STANDARD)
unset(CMAKE_BUILD_TYPE)
unset(CMAKE_CXX_FLAGS)
set(CMAKE_BUILD_TYPE "Release")
set(CMAKE_CXX_FLAGS "-D__STDC_FORMAT_MACROS -fPIC -std=gnu++17 -Wno-error")
message(STATUS "Before LLVM CMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}")
message(STATUS "Before LLVM CMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS}")
set(LLVM_SRC_DIR ${CMAKE_SOURCE_DIR}/external/llvm-project/llvm)
set(LLVM_ENABLE_EH OFF)
set(LLVM_ENABLE_CXX1Y ON)

set(LLVM_LIT_OUTPUT_DIR ${CMAKE_CURRENT_BINARY_DIR}/llvm/bin)

#set(CLANG_SRC_DIR ${CMAKE_SOURCE_DIR}/external/llvm-project/clang)
#set(LLVM_ENABLE_PROJECTS_USED ON)
#set(LLVM_ENABLE_PROJECTS "clang")
#set(LLVM_EXTERNAL_CLANG_SOURCE_DIR ${CLANG_SRC_DIR})

set(LLD_BUILD_TOOLS ON)
set(LLD_SRC_DIR ${CMAKE_SOURCE_DIR}/external/llvm-project/lld)
set(LLVM_ENABLE_PROJECTS_USED ON)
set(LLVM_ENABLE_PROJECTS "${LLVM_ENABLE_PROJECTS};lld")
set(LLVM_EXTERNAL_LLD_SOURCE_DIR ${LLD_SRC_DIR})

set(MLIR_SRC_DIR ${CMAKE_SOURCE_DIR}/external/llvm-project/mlir)
set(LLVM_ENABLE_PROJECTS_USED ON)
set(LLVM_ENABLE_PROJECTS "${LLVM_ENABLE_PROJECTS};mlir")
set(LLVM_EXTERNAL_MLIR_SOURCE_DIR ${MLIR_SRC_DIR})


set(LLVM_TARGETS_TO_BUILD "X86;NVPTX;AMDGPU" CACHE STRING "LLVM Targets to build")

# TODO: enable EXCLUDE_FROM_ALL option
#add_subdirectory(${LLVM_SRC_DIR} ${CMAKE_BINARY_DIR}/llvm EXCLUDE_FROM_ALL)
add_subdirectory(${LLVM_SRC_DIR} ${CMAKE_BINARY_DIR}/llvm)
add_llvm_external_project(clang ${CLANG_SRC_DIR})
add_llvm_external_project(lld ${LLD_SRC_DIR})
add_llvm_external_project(mlir ${MLIR_SRC_DIR})
list(APPEND CMAKE_MODULE_PATH "${LLVM_SRC_DIR}/cmake/modules;${LLVM_SRC_DIR}/../mlir/cmake/modules")
include(DetermineGCCCompatible)

set(CMAKE_CXX_STANDARD ${ORIG_CXX_STD})
set(CMAKE_BUILD_TYPE ${ORIG_BUILD_TYPE})
set(CMAKE_CXX_FLAGS ${ORIG_CMAKE_CXX_FLAGS})
